function cov_x34ikl28g(){var path="C:\\Users\\MSI\\OneDrive\\Documents\\GitHub\\Elkindy_Backend\\test\\course.spec.cjs";var hash="a6d4edcfd0d39d7e31d0fd78da8eed9041600f81";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\MSI\\OneDrive\\Documents\\GitHub\\Elkindy_Backend\\test\\course.spec.cjs",statementMap:{"0":{start:{line:1,column:15},end:{line:1,column:32}},"1":{start:{line:2,column:14},end:{line:2,column:30}},"2":{start:{line:4,column:15},end:{line:4,column:44}},"3":{start:{line:6,column:24},end:{line:6,column:42}},"4":{start:{line:9,column:17},end:{line:12,column:1}},"5":{start:{line:14,column:0},end:{line:43,column:3}},"6":{start:{line:15,column:2},end:{line:23,column:5}},"7":{start:{line:17,column:4},end:{line:17,column:59}},"8":{start:{line:19,column:4},end:{line:22,column:7}},"9":{start:{line:20,column:21},end:{line:20,column:63}},"10":{start:{line:20,column:45},end:{line:20,column:62}},"11":{start:{line:21,column:6},end:{line:21,column:37}},"12":{start:{line:25,column:2},end:{line:28,column:5}},"13":{start:{line:26,column:19},end:{line:26,column:38}},"14":{start:{line:27,column:4},end:{line:27,column:98}},"15":{start:{line:30,column:2},end:{line:35,column:5}},"16":{start:{line:31,column:21},end:{line:31,column:33}},"17":{start:{line:32,column:27},end:{line:32,column:75}},"18":{start:{line:32,column:51},end:{line:32,column:74}},"19":{start:{line:33,column:19},end:{line:33,column:50}},"20":{start:{line:34,column:4},end:{line:34,column:114}},"21":{start:{line:37,column:2},end:{line:41,column:5}},"22":{start:{line:38,column:21},end:{line:38,column:36}},"23":{start:{line:39,column:19},end:{line:39,column:50}},"24":{start:{line:40,column:4},end:{line:40,column:103}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:14,column:43},end:{line:14,column:44}},loc:{start:{line:14,column:49},end:{line:43,column:1}},line:14},"1":{name:"(anonymous_1)",decl:{start:{line:15,column:9},end:{line:15,column:10}},loc:{start:{line:15,column:15},end:{line:23,column:3}},line:15},"2":{name:"(anonymous_2)",decl:{start:{line:19,column:54},end:{line:19,column:55}},loc:{start:{line:19,column:62},end:{line:22,column:5}},line:19},"3":{name:"(anonymous_3)",decl:{start:{line:20,column:35},end:{line:20,column:36}},loc:{start:{line:20,column:45},end:{line:20,column:62}},line:20},"4":{name:"(anonymous_4)",decl:{start:{line:25,column:45},end:{line:25,column:46}},loc:{start:{line:25,column:57},end:{line:28,column:3}},line:25},"5":{name:"(anonymous_5)",decl:{start:{line:30,column:53},end:{line:30,column:54}},loc:{start:{line:30,column:65},end:{line:35,column:3}},line:30},"6":{name:"(anonymous_6)",decl:{start:{line:32,column:41},end:{line:32,column:42}},loc:{start:{line:32,column:51},end:{line:32,column:74}},line:32},"7":{name:"(anonymous_7)",decl:{start:{line:37,column:59},end:{line:37,column:60}},loc:{start:{line:37,column:71},end:{line:41,column:3}},line:37}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a6d4edcfd0d39d7e31d0fd78da8eed9041600f81"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_x34ikl28g=function(){return actualCoverage;};}return actualCoverage;}cov_x34ikl28g();const assert=(cov_x34ikl28g().s[0]++,require('assert'));const sinon=(cov_x34ikl28g().s[1]++,require('sinon'));// For mocking Mongoose methods
// Dynamic import of the Course model using import()
const Course=(cov_x34ikl28g().s[2]++,import('../models/Course.js'));// Mocking the Course model methods
const mockCourseModel=(cov_x34ikl28g().s[3]++,sinon.stub(Course));// Mock the data for testing
const testData=(cov_x34ikl28g().s[4]++,[{title:'Course 1',description:'Description for Course 1'},{title:'Course 2',description:'Description for Course 2'}]);cov_x34ikl28g().s[5]++;describe('Course Listing and Details API',()=>{cov_x34ikl28g().f[0]++;cov_x34ikl28g().s[6]++;before(()=>{cov_x34ikl28g().f[1]++;cov_x34ikl28g().s[7]++;// Stub the find method to resolve with test data
mockCourseModel.find=sinon.stub().resolves(testData);// Stub the findById method to resolve with a single course from test data
cov_x34ikl28g().s[8]++;mockCourseModel.findById=sinon.stub().callsFake(id=>{cov_x34ikl28g().f[2]++;const course=(cov_x34ikl28g().s[9]++,testData.find(course=>{cov_x34ikl28g().f[3]++;cov_x34ikl28g().s[10]++;return course._id===id;}));cov_x34ikl28g().s[11]++;return Promise.resolve(course);});});cov_x34ikl28g().s[12]++;it('should list all courses successfully',async()=>{cov_x34ikl28g().f[4]++;const result=(cov_x34ikl28g().s[13]++,await Course.find());cov_x34ikl28g().s[14]++;assert.deepStrictEqual(result,testData,'The listed courses do not match the expected data');});cov_x34ikl28g().s[15]++;it('should get course details by ID successfully',async()=>{cov_x34ikl28g().f[5]++;const courseId=(cov_x34ikl28g().s[16]++,'1234567890');// Assuming a valid course ID
const expectedCourse=(cov_x34ikl28g().s[17]++,testData.find(course=>{cov_x34ikl28g().f[6]++;cov_x34ikl28g().s[18]++;return course._id===courseId;}));const result=(cov_x34ikl28g().s[19]++,await Course.findById(courseId));cov_x34ikl28g().s[20]++;assert.deepStrictEqual(result,expectedCourse,'The retrieved course details do not match the expected data');});cov_x34ikl28g().s[21]++;it('should return undefined for non-existent course ID',async()=>{cov_x34ikl28g().f[7]++;const courseId=(cov_x34ikl28g().s[22]++,'nonExistentId');// Assuming a non-existent course ID
const result=(cov_x34ikl28g().s[23]++,await Course.findById(courseId));cov_x34ikl28g().s[24]++;assert.strictEqual(result,undefined,'The result should be undefined for non-existent course ID');});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfeDM0aWtsMjhnIiwiYWN0dWFsQ292ZXJhZ2UiLCJhc3NlcnQiLCJzIiwicmVxdWlyZSIsInNpbm9uIiwiQ291cnNlIiwibW9ja0NvdXJzZU1vZGVsIiwic3R1YiIsInRlc3REYXRhIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImRlc2NyaWJlIiwiZiIsImJlZm9yZSIsImZpbmQiLCJyZXNvbHZlcyIsImZpbmRCeUlkIiwiY2FsbHNGYWtlIiwiaWQiLCJjb3Vyc2UiLCJfaWQiLCJQcm9taXNlIiwicmVzb2x2ZSIsIml0IiwicmVzdWx0IiwiZGVlcFN0cmljdEVxdWFsIiwiY291cnNlSWQiLCJleHBlY3RlZENvdXJzZSIsInN0cmljdEVxdWFsIiwidW5kZWZpbmVkIl0sInNvdXJjZXMiOlsiY291cnNlLnNwZWMuY2pzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xyXG5jb25zdCBzaW5vbiA9IHJlcXVpcmUoJ3Npbm9uJyk7IC8vIEZvciBtb2NraW5nIE1vbmdvb3NlIG1ldGhvZHNcclxuLy8gRHluYW1pYyBpbXBvcnQgb2YgdGhlIENvdXJzZSBtb2RlbCB1c2luZyBpbXBvcnQoKVxyXG5jb25zdCBDb3Vyc2UgPSBpbXBvcnQoJy4uL21vZGVscy9Db3Vyc2UuanMnKTtcclxuLy8gTW9ja2luZyB0aGUgQ291cnNlIG1vZGVsIG1ldGhvZHNcclxuY29uc3QgbW9ja0NvdXJzZU1vZGVsID0gc2lub24uc3R1YihDb3Vyc2UpO1xyXG5cclxuLy8gTW9jayB0aGUgZGF0YSBmb3IgdGVzdGluZ1xyXG5jb25zdCB0ZXN0RGF0YSA9IFtcclxuICB7IHRpdGxlOiAnQ291cnNlIDEnLCBkZXNjcmlwdGlvbjogJ0Rlc2NyaXB0aW9uIGZvciBDb3Vyc2UgMScgfSxcclxuICB7IHRpdGxlOiAnQ291cnNlIDInLCBkZXNjcmlwdGlvbjogJ0Rlc2NyaXB0aW9uIGZvciBDb3Vyc2UgMicgfVxyXG5dO1xyXG5cclxuZGVzY3JpYmUoJ0NvdXJzZSBMaXN0aW5nIGFuZCBEZXRhaWxzIEFQSScsICgpID0+IHtcclxuICBiZWZvcmUoKCkgPT4ge1xyXG4gICAgLy8gU3R1YiB0aGUgZmluZCBtZXRob2QgdG8gcmVzb2x2ZSB3aXRoIHRlc3QgZGF0YVxyXG4gICAgbW9ja0NvdXJzZU1vZGVsLmZpbmQgPSBzaW5vbi5zdHViKCkucmVzb2x2ZXModGVzdERhdGEpO1xyXG4gICAgLy8gU3R1YiB0aGUgZmluZEJ5SWQgbWV0aG9kIHRvIHJlc29sdmUgd2l0aCBhIHNpbmdsZSBjb3Vyc2UgZnJvbSB0ZXN0IGRhdGFcclxuICAgIG1vY2tDb3Vyc2VNb2RlbC5maW5kQnlJZCA9IHNpbm9uLnN0dWIoKS5jYWxsc0Zha2UoKGlkKSA9PiB7XHJcbiAgICAgIGNvbnN0IGNvdXJzZSA9IHRlc3REYXRhLmZpbmQoY291cnNlID0+IGNvdXJzZS5faWQgPT09IGlkKTtcclxuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShjb3Vyc2UpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcblxyXG4gIGl0KCdzaG91bGQgbGlzdCBhbGwgY291cnNlcyBzdWNjZXNzZnVsbHknLCBhc3luYyAoKSA9PiB7XHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBDb3Vyc2UuZmluZCgpO1xyXG4gICAgYXNzZXJ0LmRlZXBTdHJpY3RFcXVhbChyZXN1bHQsIHRlc3REYXRhLCAnVGhlIGxpc3RlZCBjb3Vyc2VzIGRvIG5vdCBtYXRjaCB0aGUgZXhwZWN0ZWQgZGF0YScpO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnc2hvdWxkIGdldCBjb3Vyc2UgZGV0YWlscyBieSBJRCBzdWNjZXNzZnVsbHknLCBhc3luYyAoKSA9PiB7XHJcbiAgICBjb25zdCBjb3Vyc2VJZCA9ICcxMjM0NTY3ODkwJzsgLy8gQXNzdW1pbmcgYSB2YWxpZCBjb3Vyc2UgSURcclxuICAgIGNvbnN0IGV4cGVjdGVkQ291cnNlID0gdGVzdERhdGEuZmluZChjb3Vyc2UgPT4gY291cnNlLl9pZCA9PT0gY291cnNlSWQpO1xyXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgQ291cnNlLmZpbmRCeUlkKGNvdXJzZUlkKTtcclxuICAgIGFzc2VydC5kZWVwU3RyaWN0RXF1YWwocmVzdWx0LCBleHBlY3RlZENvdXJzZSwgJ1RoZSByZXRyaWV2ZWQgY291cnNlIGRldGFpbHMgZG8gbm90IG1hdGNoIHRoZSBleHBlY3RlZCBkYXRhJyk7XHJcbiAgfSk7XHJcblxyXG4gIGl0KCdzaG91bGQgcmV0dXJuIHVuZGVmaW5lZCBmb3Igbm9uLWV4aXN0ZW50IGNvdXJzZSBJRCcsIGFzeW5jICgpID0+IHtcclxuICAgIGNvbnN0IGNvdXJzZUlkID0gJ25vbkV4aXN0ZW50SWQnOyAvLyBBc3N1bWluZyBhIG5vbi1leGlzdGVudCBjb3Vyc2UgSURcclxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IENvdXJzZS5maW5kQnlJZChjb3Vyc2VJZCk7XHJcbiAgICBhc3NlcnQuc3RyaWN0RXF1YWwocmVzdWx0LCB1bmRlZmluZWQsICdUaGUgcmVzdWx0IHNob3VsZCBiZSB1bmRlZmluZWQgZm9yIG5vbi1leGlzdGVudCBjb3Vyc2UgSUQnKTtcclxuICB9KTtcclxuICBcclxufSk7Il0sIm1hcHBpbmdzIjoiNjJHQWVZO0FBQUFBLGFBQUEsU0FBQUEsQ0FBQSxTQUFBQyxjQUFBLFdBQUFBLGNBQUEsRUFBQUQsYUFBQSxHQWZaLEtBQU0sQ0FBQUUsTUFBTSxFQUFBRixhQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUNoQyxLQUFNLENBQUFDLEtBQUssRUFBQUwsYUFBQSxHQUFBRyxDQUFBLE1BQUdDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtBQUNoQztBQUNBLEtBQU0sQ0FBQUUsTUFBTSxFQUFBTixhQUFBLEdBQUFHLENBQUEsTUFBRyxNQUFNLENBQUMscUJBQXFCLENBQUMsRUFDNUM7QUFDQSxLQUFNLENBQUFJLGVBQWUsRUFBQVAsYUFBQSxHQUFBRyxDQUFBLE1BQUdFLEtBQUssQ0FBQ0csSUFBSSxDQUFDRixNQUFNLENBQUMsRUFFMUM7QUFDQSxLQUFNLENBQUFHLFFBQVEsRUFBQVQsYUFBQSxHQUFBRyxDQUFBLE1BQUcsQ0FDZixDQUFFTyxLQUFLLENBQUUsVUFBVSxDQUFFQyxXQUFXLENBQUUsMEJBQTJCLENBQUMsQ0FDOUQsQ0FBRUQsS0FBSyxDQUFFLFVBQVUsQ0FBRUMsV0FBVyxDQUFFLDBCQUEyQixDQUFDLENBQy9ELEVBQUNYLGFBQUEsR0FBQUcsQ0FBQSxNQUVGUyxRQUFRLENBQUMsZ0NBQWdDLENBQUUsSUFBTSxDQUFBWixhQUFBLEdBQUFhLENBQUEsTUFBQWIsYUFBQSxHQUFBRyxDQUFBLE1BQy9DVyxNQUFNLENBQUMsSUFBTSxDQUFBZCxhQUFBLEdBQUFhLENBQUEsTUFBQWIsYUFBQSxHQUFBRyxDQUFBLE1BQ1g7QUFDQUksZUFBZSxDQUFDUSxJQUFJLENBQUdWLEtBQUssQ0FBQ0csSUFBSSxDQUFDLENBQUMsQ0FBQ1EsUUFBUSxDQUFDUCxRQUFRLENBQUMsQ0FDdEQ7QUFBQVQsYUFBQSxHQUFBRyxDQUFBLE1BQ0FJLGVBQWUsQ0FBQ1UsUUFBUSxDQUFHWixLQUFLLENBQUNHLElBQUksQ0FBQyxDQUFDLENBQUNVLFNBQVMsQ0FBRUMsRUFBRSxFQUFLLENBQUFuQixhQUFBLEdBQUFhLENBQUEsTUFDeEQsS0FBTSxDQUFBTyxNQUFNLEVBQUFwQixhQUFBLEdBQUFHLENBQUEsTUFBR00sUUFBUSxDQUFDTSxJQUFJLENBQUNLLE1BQU0sRUFBSSxDQUFBcEIsYUFBQSxHQUFBYSxDQUFBLE1BQUFiLGFBQUEsR0FBQUcsQ0FBQSxjQUFBaUIsTUFBTSxDQUFDQyxHQUFHLEdBQUtGLEVBQUUsQ0FBRCxDQUFDLENBQUMsRUFBQ25CLGFBQUEsR0FBQUcsQ0FBQSxPQUMxRCxNQUFPLENBQUFtQixPQUFPLENBQUNDLE9BQU8sQ0FBQ0gsTUFBTSxDQUFDLENBQ2hDLENBQUMsQ0FBQyxDQUNKLENBQUMsQ0FBQyxDQUFDcEIsYUFBQSxHQUFBRyxDQUFBLE9BRUhxQixFQUFFLENBQUMsc0NBQXNDLENBQUUsU0FBWSxDQUFBeEIsYUFBQSxHQUFBYSxDQUFBLE1BQ3JELEtBQU0sQ0FBQVksTUFBTSxFQUFBekIsYUFBQSxHQUFBRyxDQUFBLE9BQUcsS0FBTSxDQUFBRyxNQUFNLENBQUNTLElBQUksQ0FBQyxDQUFDLEVBQUNmLGFBQUEsR0FBQUcsQ0FBQSxPQUNuQ0QsTUFBTSxDQUFDd0IsZUFBZSxDQUFDRCxNQUFNLENBQUVoQixRQUFRLENBQUUsbURBQW1ELENBQUMsQ0FDL0YsQ0FBQyxDQUFDLENBQUNULGFBQUEsR0FBQUcsQ0FBQSxPQUVIcUIsRUFBRSxDQUFDLDhDQUE4QyxDQUFFLFNBQVksQ0FBQXhCLGFBQUEsR0FBQWEsQ0FBQSxNQUM3RCxLQUFNLENBQUFjLFFBQVEsRUFBQTNCLGFBQUEsR0FBQUcsQ0FBQSxPQUFHLFlBQVksRUFBRTtBQUMvQixLQUFNLENBQUF5QixjQUFjLEVBQUE1QixhQUFBLEdBQUFHLENBQUEsT0FBR00sUUFBUSxDQUFDTSxJQUFJLENBQUNLLE1BQU0sRUFBSSxDQUFBcEIsYUFBQSxHQUFBYSxDQUFBLE1BQUFiLGFBQUEsR0FBQUcsQ0FBQSxjQUFBaUIsTUFBTSxDQUFDQyxHQUFHLEdBQUtNLFFBQVEsQ0FBRCxDQUFDLENBQUMsRUFDdkUsS0FBTSxDQUFBRixNQUFNLEVBQUF6QixhQUFBLEdBQUFHLENBQUEsT0FBRyxLQUFNLENBQUFHLE1BQU0sQ0FBQ1csUUFBUSxDQUFDVSxRQUFRLENBQUMsRUFBQzNCLGFBQUEsR0FBQUcsQ0FBQSxPQUMvQ0QsTUFBTSxDQUFDd0IsZUFBZSxDQUFDRCxNQUFNLENBQUVHLGNBQWMsQ0FBRSw2REFBNkQsQ0FBQyxDQUMvRyxDQUFDLENBQUMsQ0FBQzVCLGFBQUEsR0FBQUcsQ0FBQSxPQUVIcUIsRUFBRSxDQUFDLG9EQUFvRCxDQUFFLFNBQVksQ0FBQXhCLGFBQUEsR0FBQWEsQ0FBQSxNQUNuRSxLQUFNLENBQUFjLFFBQVEsRUFBQTNCLGFBQUEsR0FBQUcsQ0FBQSxPQUFHLGVBQWUsRUFBRTtBQUNsQyxLQUFNLENBQUFzQixNQUFNLEVBQUF6QixhQUFBLEdBQUFHLENBQUEsT0FBRyxLQUFNLENBQUFHLE1BQU0sQ0FBQ1csUUFBUSxDQUFDVSxRQUFRLENBQUMsRUFBQzNCLGFBQUEsR0FBQUcsQ0FBQSxPQUMvQ0QsTUFBTSxDQUFDMkIsV0FBVyxDQUFDSixNQUFNLENBQUVLLFNBQVMsQ0FBRSwyREFBMkQsQ0FBQyxDQUNwRyxDQUFDLENBQUMsQ0FFSixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=